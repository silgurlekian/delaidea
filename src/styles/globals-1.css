@custom-variant dark (&:is(.dark *));

:root {
  --font-size: 16px;
  --background: #ffffff;
  --foreground: #0f172a;
  --card: #ffffff;
  --card-foreground: #0f172a;
  --popover: #ffffff;
  --popover-foreground: #0f172a;
  --primary: #6366f1;
  --primary-foreground: #ffffff;
  --secondary: #f8fafc;
  --secondary-foreground: #1e293b;
  --muted: #f1f5f9;
  --muted-foreground: #64748b;
  --accent: #e0e7ff;
  --accent-foreground: #3730a3;
  --destructive: #ef4444;
  --destructive-foreground: #ffffff;
  --border: #e2e8f0;
  --input: transparent;
  --input-background: #f8fafc;
  --switch-background: #cbd5e1;
  
  /* Interactive elements */
  --glass-bg: rgba(255, 255, 255, 0.85);
  --glass-border: rgba(255, 255, 255, 0.3);
  --shadow-light: 0 8px 32px 0 rgba(0, 0, 0, 0.08);
  --shadow-hover: 0 15px 35px rgba(0, 0, 0, 0.12);
  --glow-primary: 0 0 30px rgba(99, 102, 241, 0.3);
  --glow-accent: 0 0 25px rgba(139, 92, 246, 0.25);
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --ring: #6366f1;
  --chart-1: #f59e0b;
  --chart-2: #10b981;
  --chart-3: #3b82f6;
  --chart-4: #8b5cf6;
  --chart-5: #ef4444;
  --radius: 0.75rem;
  --sidebar: #ffffff;
  --sidebar-foreground: #1a1a1a;
  --sidebar-primary: #6366f1;
  --sidebar-primary-foreground: #ffffff;
  --sidebar-accent: #f8fafc;
  --sidebar-accent-foreground: #374151;
  --sidebar-border: #e5e7eb;
  --sidebar-ring: #6366f1;
  
  /* Custom vibrant colors */
  --gradient-1: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --gradient-2: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
  --gradient-3: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
  --gradient-4: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
  --vibrant-purple: #8b5cf6;
  --vibrant-pink: #ec4899;
  --vibrant-blue: #3b82f6;
  --vibrant-green: #10b981;
  --vibrant-orange: #f59e0b;
}

.dark {
  --background: #0f172a;
  --foreground: #f8fafc;
  --card: #1e293b;
  --card-foreground: #f8fafc;
  --popover: #1e293b;
  --popover-foreground: #f8fafc;
  --primary: #8b5cf6;
  --primary-foreground: #ffffff;
  --secondary: #334155;
  --secondary-foreground: #f8fafc;
  --muted: #1e293b;
  --muted-foreground: #94a3b8;
  --accent: #312e81;
  --accent-foreground: #e0e7ff;
  --destructive: #f87171;
  --destructive-foreground: #ffffff;
  --border: #334155;
  --input: #334155;
  --ring: #8b5cf6;
  --font-weight-medium: 500;
  --font-weight-normal: 400;
  --chart-1: #fbbf24;
  --chart-2: #34d399;
  --chart-3: #60a5fa;
  --chart-4: #a78bfa;
  --chart-5: #fb7185;
  --sidebar: #1e293b;
  --sidebar-foreground: #f8fafc;
  --sidebar-primary: #8b5cf6;
  --sidebar-primary-foreground: #ffffff;
  --sidebar-accent: #334155;
  --sidebar-accent-foreground: #f8fafc;
  --sidebar-border: #334155;
  --sidebar-ring: #8b5cf6;
  
  /* Custom vibrant colors for dark mode */
  --gradient-1: linear-gradient(135deg, #7c3aed 0%, #a855f7 100%);
  --gradient-2: linear-gradient(135deg, #ec4899 0%, #f97316 100%);
  --gradient-3: linear-gradient(135deg, #06b6d4 0%, #3b82f6 100%);
  --gradient-4: linear-gradient(135deg, #10b981 0%, #059669 100%);
  --vibrant-purple: #a855f7;
  --vibrant-pink: #f472b6;
  --vibrant-blue: #60a5fa;
  --vibrant-green: #34d399;
  --vibrant-orange: #fbbf24;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-input-background: var(--input-background);
  --color-switch-background: var(--switch-background);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  body {
    @apply text-foreground;
    background-color: #ffffff !important; /* Force pure white background */
    transition: color 0.3s ease;
  }
  
  /* Show default cursor on touch devices */
  @media (hover: none) and (pointer: coarse) {
    body {
      cursor: auto;
    }
  }

  /* Force white background everywhere */
  .bg-background {
    background-color: #ffffff !important;
  }
  
  html {
    background-color: #ffffff !important;
  }

  /* Smooth transitions for theme switching */
  .dark, .light {
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  /* Ensure smooth transitions for all elements during theme switch */
  * {
    transition-property: background-color, border-color, color, fill, stroke;
    transition-duration: 0.3s;
    transition-timing-function: ease;
  }
}

/**
 * Base typography. This is not applied to elements which have an ancestor with a Tailwind text class.
 */
@layer base {
  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) {
    h1 {
      font-size: var(--text-2xl);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    h2 {
      font-size: var(--text-xl);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    h3 {
      font-size: var(--text-lg);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    h4 {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    p {
      font-size: var(--text-base);
      font-weight: var(--font-weight-normal);
      line-height: 1.5;
    }

    label {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    button {
      font-size: var(--text-base);
      font-weight: var(--font-weight-medium);
      line-height: 1.5;
    }

    input {
      font-size: var(--text-base);
      font-weight: var(--font-weight-normal);
      line-height: 1.5;
    }
  }
}

html {
  font-size: var(--font-size);
}

/* Sparkle and floating animations */
@keyframes sparkle {
  0%, 100% {
    opacity: 0.3;
    transform: scale(0.8);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  33% {
    transform: translateY(-10px) rotate(120deg);
  }
  66% {
    transform: translateY(5px) rotate(240deg);
  }
}

@keyframes pulse-glow {
  0%, 100% {
    opacity: 0.4;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
}

.animate-sparkle {
  animation: sparkle 3s ease-in-out infinite;
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulse-glow {
  animation: pulse-glow 4s ease-in-out infinite;
}

/* Custom vibrant colors utilities */
.bg-vibrant-purple {
  background-color: var(--vibrant-purple);
}

.bg-vibrant-pink {
  background-color: var(--vibrant-pink);
}

.bg-vibrant-blue {
  background-color: var(--vibrant-blue);
}

.bg-vibrant-green {
  background-color: var(--vibrant-green);
}

.bg-vibrant-orange {
  background-color: var(--vibrant-orange);
}

.text-vibrant-purple {
  color: var(--vibrant-purple);
}

.text-vibrant-pink {
  color: var(--vibrant-pink);
}

.text-vibrant-blue {
  color: var(--vibrant-blue);
}

.text-vibrant-green {
  color: var(--vibrant-green);
}

.text-vibrant-orange {
  color: var(--vibrant-orange);
}

/* Advanced interactive animations */
@keyframes morphing-blob {
  0%, 100% {
    border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    transform: translate(-50%, -50%) rotate(0deg) scale(1);
  }
  25% {
    border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    transform: translate(-50%, -50%) rotate(90deg) scale(1.1);
  }
  50% {
    border-radius: 70% 30% 60% 40% / 40% 70% 60% 30%;
    transform: translate(-50%, -50%) rotate(180deg) scale(0.9);
  }
  75% {
    border-radius: 40% 70% 30% 60% / 30% 40% 70% 60%;
    transform: translate(-50%, -50%) rotate(270deg) scale(1.05);
  }
}

@keyframes particle-float {
  0%, 100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
    opacity: 0.6;
  }
  33% {
    transform: translateY(-30px) translateX(15px) rotate(120deg);
    opacity: 1;
  }
  66% {
    transform: translateY(-10px) translateX(-10px) rotate(240deg);
    opacity: 0.8;
  }
}

@keyframes interactive-glow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(99, 102, 241, 0.3);
    filter: brightness(1);
  }
  50% {
    box-shadow: 0 0 40px rgba(99, 102, 241, 0.6), 0 0 60px rgba(139, 92, 246, 0.3);
    filter: brightness(1.1);
  }
}

@keyframes slide-up-fade {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes card-hover-lift {
  from {
    transform: translateY(0) rotateX(0) rotateY(0);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }
  to {
    transform: translateY(-8px) rotateX(2deg) rotateY(2deg);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
  }
}

@keyframes magnetic-pull {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(var(--mouse-x, 0), var(--mouse-y, 0));
  }
}

/* Interactive utility classes */
.animate-morphing-blob {
  animation: morphing-blob 20s ease-in-out infinite;
}

.animate-particle-float {
  animation: particle-float 6s ease-in-out infinite;
}

.animate-interactive-glow {
  animation: interactive-glow 3s ease-in-out infinite;
}

.animate-slide-up-fade {
  animation: slide-up-fade 0.6s ease-out forwards;
}

.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  animation: card-hover-lift 0.3s ease-out forwards;
}

.magnetic-element {
  transition: transform 0.2s ease-out;
}

/* Glass morphism effects */
.glass-card {
  background: var(--glass-bg);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow-light);
}

.glass-card:hover {
  box-shadow: var(--shadow-hover);
  transform: translateY(-2px);
}

/* Interactive button styles */
.btn-interactive {
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-interactive::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn-interactive:hover::before {
  left: 100%;
}

.btn-interactive:hover {
  box-shadow: var(--glow-primary);
  transform: translateY(-2px) scale(1.02);
}

/* Modern design utilities */
.bento-card {
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

.text-gradient {
  background: linear-gradient(135deg, var(--primary) 0%, var(--accent-foreground) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Masonry layout utilities */
.masonry-item {
  display: inline-block;
  margin: 0 0 1rem;
  width: 100%;
}

/* Advanced hover effects */
.perspective-card {
  perspective: 1000px;
  transform-style: preserve-3d;
}

.perspective-card:hover {
  transform: rotateX(5deg) rotateY(5deg);
}

/* Improved glass morphism */
.glass-card-strong {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 
    0 8px 32px 0 rgba(31, 38, 135, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.5);
}

/* Typing cursor animation */
@keyframes blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

.typing-cursor {
  animation: blink 1s infinite;
}

/* NeoBrutalist Design System */
@keyframes neo-bounce {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(-10px) rotate(5deg);
  }
  75% {
    transform: translateY(-5px) rotate(-3deg);
  }
}

@keyframes neo-shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-2px) rotate(1deg); }
  75% { transform: translateX(2px) rotate(-1deg); }
}

@keyframes neo-glitch {
  0%, 100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
  20% {
    transform: translate(-2px, 2px);
    filter: hue-rotate(90deg);
  }
  40% {
    transform: translate(-2px, -2px);
    filter: hue-rotate(180deg);
  }
  60% {
    transform: translate(2px, 2px);
    filter: hue-rotate(270deg);
  }
  80% {
    transform: translate(2px, -2px);
    filter: hue-rotate(360deg);
  }
}

@keyframes neo-pulse {
  0%, 100% {
    transform: scale(1) rotate(0deg);
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.4);
  }
  50% {
    transform: scale(1.05) rotate(2deg);
    box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);
  }
}

/* NeoBrutalist animations */
.neo-bounce {
  animation: neo-bounce 2s ease-in-out infinite;
}

.neo-shake {
  animation: neo-shake 0.5s ease-in-out infinite;
}

.neo-glitch {
  animation: neo-glitch 2s linear infinite;
}

.neo-pulse {
  animation: neo-pulse 2s infinite;
}

/* NeoBrutalist utilities */
.neo-shadow-brutal {
  box-shadow: 8px 8px 0px 0px rgba(0, 0, 0, 1);
}

.neo-shadow-brutal-lg {
  box-shadow: 12px 12px 0px 0px rgba(0, 0, 0, 1);
}

.neo-shadow-brutal-hover:hover {
  box-shadow: 4px 4px 0px 0px rgba(0, 0, 0, 1);
}

.neo-border-thick {
  border: 8px solid #000000;
}

.neo-border-medium {
  border: 4px solid #000000;
}

.neo-text-outline {
  text-shadow: 
    -2px -2px 0 #000,
    2px -2px 0 #000,
    -2px 2px 0 #000,
    2px 2px 0 #000;
}

/* NeoBrutalist colors */
.neo-yellow { background-color: #facc15; }
.neo-red { background-color: #ef4444; }
.neo-blue { background-color: #3b82f6; }
.neo-green { background-color: #22c55e; }
.neo-purple { background-color: #a855f7; }
.neo-orange { background-color: #f97316; }
.neo-pink { background-color: #ec4899; }
.neo-cyan { background-color: #06b6d4; }

/* NeoBrutalist hover effects */
.neo-hover-lift {
  transition: all 0.2s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.neo-hover-lift:hover {
  transform: translateY(-4px) rotate(2deg);
}

.neo-hover-rotate:hover {
  transform: rotate(5deg) scale(1.05);
}

.neo-hover-shake:hover {
  animation: neo-shake 0.5s ease-in-out;
}

/* Typography overrides for neobrutalist */
.neo-font-black {
  font-weight: 900 !important;
  font-family: system-ui, -apple-system, sans-serif;
}

.neo-uppercase {
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

/* Floating elements for neobrutalist background */
.neo-floating-element {
  transition: transform 0.1s ease-out;
  will-change: transform;
}

/* Neobrutalist button styles */
.btn-neo {
  font-weight: 900;
  text-transform: uppercase;
  border: 4px solid #000;
  box-shadow: 4px 4px 0px 0px rgba(0, 0, 0, 1);
  transition: all 0.2s ease;
  transform: rotate(0deg);
}

.btn-neo:hover {
  box-shadow: 2px 2px 0px 0px rgba(0, 0, 0, 1);
  transform: rotate(-1deg) translateY(-2px);
}

.btn-neo:active {
  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 1);
  transform: rotate(0deg) translateY(0px);
}

/* Clip path utilities for geometric shapes */
.clip-triangle {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

.clip-hexagon {
  clip-path: polygon(20% 0%, 80% 0%, 100% 60%, 80% 100%, 20% 100%, 0% 60%);
}

.clip-diamond {
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}

.clip-arrow {
  clip-path: polygon(0% 0%, 60% 0%, 100% 50%, 60% 100%, 0% 100%, 40% 50%);
}
